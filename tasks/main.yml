---
### Download and unpack Go binaries
- name: Download step-ca
  ansible.builtin.get_url:
    url: https://github.com/smallstep/certificates/releases/download/v{{ smallstep_ca_version }}/step-ca_linux_{{ smallstep_ca_version }}_{{ smallstep_arch }}.tar.gz
    dest: /tmp/step-ca.tar.gz
    mode: 0664
    force: true

- name: Download step-cli
  ansible.builtin.get_url:
    url: https://github.com/smallstep/cli/releases/download/v{{ smallstep_cli_version }}/step_linux_{{ smallstep_cli_version }}_{{ smallstep_arch }}.tar.gz
    dest: /tmp/step-cli.tar.gz
    mode: 0664
    force: true

- name: Untar packages
  ansible.builtin.unarchive:
    src: "/tmp/{{ item }}"
    dest: /tmp
    remote_src: true
  loop:
    - step-ca.tar.gz
    - step-cli.tar.gz

### Make sure directories exist, and copy files into them
- name: Create directories
  ansible.builtin.file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0775
  loop:
    - /usr/bin
    - /usr/lib/systemd/system
    - /usr/share/step-ca/doc
    - /usr/share/step-cli/doc
  become: true

- name: Copy certificates binary files
  ansible.builtin.copy:
    src: "/tmp/step-ca_{{ smallstep_ca_version }}/bin/{{ item }}"
    dest: "/usr/bin/{{ item }}"
    remote_src: true
    owner: root
    group: root
    mode: 0775
  loop:
    - step-ca
    - step-cloudkms-init
  become: true
  notify: Restart ca service
- name: Copy certificates README
  ansible.builtin.copy:
    src: /tmp/step-ca_{{ smallstep_ca_version }}/README.md
    dest: /usr/share/step-ca/doc/README.md
    remote_src: true
    mode: 0664
  become: true

- name: Install systemd unit
  ansible.builtin.copy:
    src: step-ca.service
    dest: /usr/lib/systemd/system/step-ca.service
    owner: root
    group: root
    mode: 0664
  become: true

- name: Copy cli binary
  ansible.builtin.copy:
    src: /tmp/step_{{ smallstep_cli_version }}/bin/step
    dest: /usr/bin/step
    remote_src: true
    owner: root
    group: root
    mode: 0775

- name: Copy cli README
  ansible.builtin.copy:
    src: /tmp/step_{{ smallstep_cli_version }}/README.md
    dest: /usr/share/step-cli/doc/README.md
    remote_src: true
    mode: 0664
  become: true

### Create user, and assign permissions
- name: Add step group
  ansible.builtin.group:
    name: step

- name: Add step user
  ansible.builtin.user:
    name: step
    group: step
    home: /var/lib/step
    create_home: true

### Check for, and create config when needed
- name: Check for CA config
  ansible.builtin.stat:
    path: /var/lib/step/.step/config/ca.json
  register: ca_config

- name: Create CA
  when: not ca_config['stat']['exists']
  block:
    ### Create password files
    - name: Generate encyrption password
      ansible.builtin.set_fact:
        smallstep_encryption_password: "{{ lookup('password', '/dev/null') }}"

    - name: Generate provisioner password
      ansible.builtin.set_fact:
        smallstep_provisioner_password: "{{ lookup('password', '/dev/null') }}"

    - name: Create encryption password file
      ansible.builtin.file:
        path: /var/lib/step/.password
        state: touch
        owner: step
        group: step
        mode: 0640
      register: encryption_password_file

    - name: Create provisioner password file
      ansible.builtin.file:
        path: /tmp/provisioner_password
        state: touch
        mode: 0600
      register: provisioner_password_file

    - name: Write encryption password to file
      ansible.builtin.copy:
        content: "{{ smallstep_encryption_password }}"
        dest: /var/lib/step/.password
        owner: step
        mode: 0600
      when: encryption_password_file['size'] == 0

    - name: Write provisioner password to file
      ansible.builtin.copy:
        content: "{{ smallstep_provisioner_password }}"
        dest: /tmp/provisioner_password
        owner: step
        mode: 0600
      when: provisioner_password_file['size'] == 0

    ### Initialize CA
    - name: Initialize CA
      ansible.builtin.command: step ca init --name=Smallstep --dns={{ ansible_fqdn }},localhost --address=127.0.0.1:8443 --provisioner=smallstep@{{ ansible_domain }} --provisioner-password-file=/tmp/provisioner_password --password-file=/var/lib/step/.password --with-ca-url=https://{{ ansible_fqdn }}
      become_user: step
      become: true
      args:
        chdir: /var/lib/step
        creates: /var/lib/step/.step/certs/root_ca.crt

    - name: Start/enable service
      ansible.builtin.service:
        name: step-ca
        state: started
        enabled: true
    - name: Debug | message
      ansible.builtin.debug:
        msg: "Provisioner password is stored in /tmp/provisioner_password. Please, move its contents to a password vault, and remove the file."
