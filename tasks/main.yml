---
### Download and unpack Go binaries
- name: Download step-ca
  get_url:
    url: https://github.com/smallstep/certificates/releases/download/v{{ smallstep_ca_version }}/step-ca_linux_{{ smallstep_ca_version }}_{{ smallstep_arch }}.tar.gz
    dest: /tmp/step-ca.tar.gz
    mode: 0664
    force: true

- name: Download step-cli
  get_url:
    url: https://github.com/smallstep/cli/releases/download/v{{ smallstep_cli_version }}/step_linux_{{ smallstep_cli_version }}_{{ smallstep_arch }}.tar.gz
    dest: /tmp/step-cli.tar.gz
    mode: 0664
    force: true

- name: Create temp directory for step-ca_{{ smallstep_ca_version }}
  ansible.builtin.file:
    path: /tmp/step-ca_{{ smallstep_ca_version }}
    state: directory

- name: Untar packages
  unarchive:
    src: "/tmp/step-ca.tar.gz"
    dest: /tmp/step-ca_{{ smallstep_ca_version }}
    remote_src: true

- name: Untar cli package
  unarchive:
    src: "/tmp/step-cli.tar.gz"
    dest: /tmp
    remote_src: true

### Make sure directories exist, and copy files into them
- name: Create directories
  file:
    path: "{{ item }}"
    state: directory
    owner: root
    group: root
    mode: 0775
  loop:
    - /usr/bin
    - /usr/lib/systemd/system
    - /usr/share/step-ca/doc
    - /usr/share/step-cli/doc
  become: true

- name: Copy certificates binary files
  copy:
    src: "/tmp/step-ca_{{ smallstep_ca_version }}/step-ca"
    dest: "/usr/bin/step-ca"
    remote_src: true
    owner: root
    group: root
    mode: 0775
  become: true
  notify: restart ca service

- name: Copy certificates README
  copy:
    src: /tmp/step-ca_{{ smallstep_ca_version }}/README.md
    dest: /usr/share/step-ca/doc/README.md
    remote_src: true
    mode: 0664
  become: true

- name: Install systemd unit
  copy:
    src: step-ca.service
    dest: /usr/lib/systemd/system/step-ca.service
    owner: root
    group: root
    mode: 0664
  become: true

- name: Copy cli binary
  copy:
    src: /tmp/step_{{ smallstep_cli_version}}/bin/step
    dest: /usr/bin/step
    remote_src: true
    owner: root
    group: root
    mode: 0775

- name: Copy cli README
  copy:
    src: /tmp/step_{{ smallstep_cli_version }}/README.md
    dest: /usr/share/step-cli/doc/README.md
    remote_src: true
    mode: 0664
  become: true

### Create user, and assign permissions
- name: Add step group
  group: name=step

- name: Add step user
  user:
    name: step
    group: step
    home: /var/lib/step
    create_home: true

### Check for, and create config when needed
- name: Check for CA config
  stat:
    path: /var/lib/step/.step/config/ca.json
  register: ca_config

- block:
  ### Create password files
  - name: Generate encyrption password
    set_fact:
      smallstep_encryption_password: "{{ lookup('password', '/dev/null') }}"

  - name: Generate provisioner password
    set_fact:
      smallstep_provisioner_password: "{{ lookup('password', '/dev/null') }}"

  - name: Create encryption password file
    file:
      path: /var/lib/step/.password
      state: touch
      owner: step
      group: step
      mode: 0660
    register: encryption_password_file

  - name: Create provisioner password file
    file:
      path: /tmp/provisioner_password
      state: touch
      mode: 0666
    register: provisioner_password_file

  - name: Write encryption password to file
    copy:
      content: "{{ smallstep_encryption_password }}"
      dest: /var/lib/step/.password
    when: encryption_password_file['size'] == 0

  - name: Write provisioner password to file
    copy:
      content: "{{ smallstep_provisioner_password }}"
      dest: /tmp/provisioner_password
    when: provisioner_password_file['size'] == 0

  ### Initialize CA
  - name: Initialize CA
    command: step ca init --name=Smallstep --dns={{ ansible_fqdn }},localhost --address=127.0.0.1:8443 --provisioner=smallstep@{{ ansible_domain }} --provisioner-password-file=/tmp/provisioner_password --password-file=/var/lib/step/.password --with-ca-url=https://{{ ansible_fqdn }}
    become_user: step
    become: true

  - name: Start/enable service
    service:
      name: step-ca
      state: started
      enabled: true
  - debug: msg="Provisioner password is stored in /tmp/provisioner_password. Please, move its contents to a password vault, and remove the file."

  when: not ca_config['stat']['exists']
